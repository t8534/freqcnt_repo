
toggleProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000003fe  00000492  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003fe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  0080011a  0080011a  000004ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  0000051c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e78  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cad  00000000  00000000  000024fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d68  00000000  00000000  000031a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b8  00000000  00000000  00003f14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000830  00000000  00000000  000042cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b92  00000000  00000000  00004afc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  0000568e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ef       	ldi	r30, 0xFE	; 254
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 31       	cpi	r26, 0x1A	; 26
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e1       	ldi	r26, 0x1A	; 26
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 32       	cpi	r26, 0x25	; 37
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a1 01 	call	0x342	; 0x342 <main>
  9e:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_time_keeping>:
	//
	// char * ultoa(unsigned long val, char * s, int radix)
	ultoa(t, buff, 10);

	
}
  a6:	14 bc       	out	0x24, r1	; 36
  a8:	15 bc       	out	0x25, r1	; 37
  aa:	83 e0       	ldi	r24, 0x03	; 3
  ac:	85 bd       	out	0x25, r24	; 37
  ae:	ee e6       	ldi	r30, 0x6E	; 110
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	10 82       	st	Z, r1
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	80 83       	st	Z, r24
  b8:	08 95       	ret

000000ba <__vector_16>:
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <timer0_overflow_count>
  d0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <timer0_overflow_count+0x1>
  d4:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <timer0_overflow_count+0x2>
  d8:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <timer0_overflow_count+0x3>
  dc:	01 96       	adiw	r24, 0x01	; 1
  de:	a1 1d       	adc	r26, r1
  e0:	b1 1d       	adc	r27, r1
  e2:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timer0_overflow_count>
  e6:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timer0_overflow_count+0x1>
  ea:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timer0_overflow_count+0x2>
  ee:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timer0_overflow_count+0x3>
  f2:	bf 91       	pop	r27
  f4:	af 91       	pop	r26
  f6:	9f 91       	pop	r25
  f8:	8f 91       	pop	r24
  fa:	0f 90       	pop	r0
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	0f 90       	pop	r0
 100:	1f 90       	pop	r1
 102:	18 95       	reti

00000104 <init_event_counting>:
 104:	e9 e6       	ldi	r30, 0x69	; 105
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	10 82       	st	Z, r1
 10a:	82 e0       	ldi	r24, 0x02	; 2
 10c:	80 83       	st	Z, r24
 10e:	1d ba       	out	0x1d, r1	; 29
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	9d bb       	out	0x1d, r25	; 29
 114:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 118:	9e e0       	ldi	r25, 0x0E	; 14
 11a:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 11e:	24 e0       	ldi	r18, 0x04	; 4
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 126:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 12a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 12e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 132:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 136:	b1 9a       	sbi	0x16, 1	; 22
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <current+0x1>
 140:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <current>
 144:	08 95       	ret

00000146 <__vector_1>:
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <__vector_11>:
 15a:	1f 92       	push	r1
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
 164:	8f 93       	push	r24
 166:	9f 93       	push	r25
 168:	af 93       	push	r26
 16a:	bf 93       	push	r27
 16c:	84 e0       	ldi	r24, 0x04	; 4
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 174:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 178:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 17c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 180:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <__data_end+0x2>
 184:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <__data_end+0x3>
 188:	01 96       	adiw	r24, 0x01	; 1
 18a:	a1 1d       	adc	r26, r1
 18c:	b1 1d       	adc	r27, r1
 18e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 192:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 196:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <__data_end+0x2>
 19a:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <__data_end+0x3>
 19e:	bf 91       	pop	r27
 1a0:	af 91       	pop	r26
 1a2:	9f 91       	pop	r25
 1a4:	8f 91       	pop	r24
 1a6:	0f 90       	pop	r0
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	0f 90       	pop	r0
 1ac:	1f 90       	pop	r1
 1ae:	18 95       	reti

000001b0 <getT1Counts>:


void getT1Counts(char *buff)
{
 1b0:	ac 01       	movw	r20, r24
	unsigned long val = 0;

	cli();
 1b2:	f8 94       	cli
	val = tmr1_ovf_cnt;
 1b4:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <__data_end>
 1b8:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <__data_end+0x1>
 1bc:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end+0x2>
 1c0:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x3>
	sei();
 1c4:	78 94       	sei
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ultoa_ncheck (unsigned long, char *, unsigned char);
	return __ultoa_ncheck (__val, __s, __radix);
 1c6:	2a e0       	ldi	r18, 0x0A	; 10
 1c8:	0e 94 cb 01 	call	0x396	; 0x396 <__ultoa_ncheck>
 1cc:	08 95       	ret

000001ce <HD44780_write_nibble>:
  if (row > 1) {
    row = 1;
  }

  _delay_ms(5);  //todo: test is it necessary
  HD44780_command(HD44780_SETDDRAMADDR | (col + offsets[row]));
 1ce:	e1 ee       	ldi	r30, 0xE1	; 225
 1d0:	f4 e0       	ldi	r31, 0x04	; 4
 1d2:	31 97       	sbiw	r30, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <HD44780_write_nibble+0x4>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <HD44780_write_nibble+0xa>
 1d8:	00 00       	nop
 1da:	98 b1       	in	r25, 0x08	; 8
 1dc:	90 7f       	andi	r25, 0xF0	; 240
 1de:	98 b9       	out	0x08, r25	; 8
 1e0:	98 b1       	in	r25, 0x08	; 8
 1e2:	8f 70       	andi	r24, 0x0F	; 15
 1e4:	89 2b       	or	r24, r25
 1e6:	88 b9       	out	0x08, r24	; 8
 1e8:	89 ef       	ldi	r24, 0xF9	; 249
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <HD44780_write_nibble+0x1e>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <HD44780_write_nibble+0x24>
 1f2:	00 00       	nop
 1f4:	44 98       	cbi	0x08, 4	; 8
 1f6:	e9 ef       	ldi	r30, 0xF9	; 249
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	31 97       	sbiw	r30, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <HD44780_write_nibble+0x2c>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <HD44780_write_nibble+0x32>
 200:	00 00       	nop
 202:	44 9a       	sbi	0x08, 4	; 8
 204:	89 ef       	ldi	r24, 0xF9	; 249
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <HD44780_write_nibble+0x3a>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <HD44780_write_nibble+0x40>
 20e:	00 00       	nop
 210:	44 98       	cbi	0x08, 4	; 8
 212:	e9 ef       	ldi	r30, 0xF9	; 249
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <HD44780_write_nibble+0x48>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <HD44780_write_nibble+0x4e>
 21c:	00 00       	nop
 21e:	08 95       	ret

00000220 <HD44780_send>:
 220:	cf 93       	push	r28
 222:	c8 2f       	mov	r28, r24
 224:	89 ef       	ldi	r24, 0xF9	; 249
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <HD44780_send+0x8>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <HD44780_send+0xe>
 22e:	00 00       	nop
 230:	66 23       	and	r22, r22
 232:	11 f0       	breq	.+4      	; 0x238 <HD44780_send+0x18>
 234:	45 9a       	sbi	0x08, 5	; 8
 236:	01 c0       	rjmp	.+2      	; 0x23a <HD44780_send+0x1a>
 238:	45 98       	cbi	0x08, 5	; 8
 23a:	89 ef       	ldi	r24, 0xF9	; 249
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <HD44780_send+0x1e>
 242:	00 c0       	rjmp	.+0      	; 0x244 <HD44780_send+0x24>
 244:	00 00       	nop
 246:	28 98       	cbi	0x05, 0	; 5
 248:	89 ef       	ldi	r24, 0xF9	; 249
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <HD44780_send+0x2c>
 250:	00 c0       	rjmp	.+0      	; 0x252 <HD44780_send+0x32>
 252:	00 00       	nop
 254:	8c 2f       	mov	r24, r28
 256:	82 95       	swap	r24
 258:	8f 70       	andi	r24, 0x0F	; 15
 25a:	0e 94 e7 00 	call	0x1ce	; 0x1ce <HD44780_write_nibble>
 25e:	81 ee       	ldi	r24, 0xE1	; 225
 260:	94 e0       	ldi	r25, 0x04	; 4
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <HD44780_send+0x42>
 266:	00 c0       	rjmp	.+0      	; 0x268 <HD44780_send+0x48>
 268:	00 00       	nop
 26a:	8c 2f       	mov	r24, r28
 26c:	0e 94 e7 00 	call	0x1ce	; 0x1ce <HD44780_write_nibble>
 270:	cf 91       	pop	r28
 272:	08 95       	ret

00000274 <HD44780_command>:
 274:	60 e0       	ldi	r22, 0x00	; 0
 276:	0e 94 10 01 	call	0x220	; 0x220 <HD44780_send>
 27a:	08 95       	ret

0000027c <HD44780_write>:
 27c:	61 e0       	ldi	r22, 0x01	; 1
 27e:	0e 94 10 01 	call	0x220	; 0x220 <HD44780_send>
 282:	08 95       	ret

00000284 <HD44780_init>:
 284:	3d 9a       	sbi	0x07, 5	; 7
 286:	20 9a       	sbi	0x04, 0	; 4
 288:	3c 9a       	sbi	0x07, 4	; 7
 28a:	87 b1       	in	r24, 0x07	; 7
 28c:	8f 60       	ori	r24, 0x0F	; 15
 28e:	87 b9       	out	0x07, r24	; 7
 290:	85 ea       	ldi	r24, 0xA5	; 165
 292:	9e e0       	ldi	r25, 0x0E	; 14
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <HD44780_init+0x10>
 298:	00 c0       	rjmp	.+0      	; 0x29a <HD44780_init+0x16>
 29a:	00 00       	nop
 29c:	44 98       	cbi	0x08, 4	; 8
 29e:	45 98       	cbi	0x08, 5	; 8
 2a0:	28 98       	cbi	0x05, 0	; 5
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	94 e0       	ldi	r25, 0x04	; 4
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <HD44780_init+0x22>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <HD44780_init+0x28>
 2ac:	00 00       	nop
 2ae:	83 e0       	ldi	r24, 0x03	; 3
 2b0:	0e 94 e7 00 	call	0x1ce	; 0x1ce <HD44780_write_nibble>
 2b4:	81 ee       	ldi	r24, 0xE1	; 225
 2b6:	94 e0       	ldi	r25, 0x04	; 4
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <HD44780_init+0x34>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <HD44780_init+0x3a>
 2be:	00 00       	nop
 2c0:	83 e0       	ldi	r24, 0x03	; 3
 2c2:	0e 94 e7 00 	call	0x1ce	; 0x1ce <HD44780_write_nibble>
 2c6:	81 ee       	ldi	r24, 0xE1	; 225
 2c8:	94 e0       	ldi	r25, 0x04	; 4
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	f1 f7       	brne	.-4      	; 0x2ca <HD44780_init+0x46>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <HD44780_init+0x4c>
 2d0:	00 00       	nop
 2d2:	83 e0       	ldi	r24, 0x03	; 3
 2d4:	0e 94 e7 00 	call	0x1ce	; 0x1ce <HD44780_write_nibble>
 2d8:	81 ee       	ldi	r24, 0xE1	; 225
 2da:	94 e0       	ldi	r25, 0x04	; 4
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <HD44780_init+0x58>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <HD44780_init+0x5e>
 2e2:	00 00       	nop
 2e4:	82 e0       	ldi	r24, 0x02	; 2
 2e6:	0e 94 e7 00 	call	0x1ce	; 0x1ce <HD44780_write_nibble>
 2ea:	88 e2       	ldi	r24, 0x28	; 40
 2ec:	0e 94 3a 01 	call	0x274	; 0x274 <HD44780_command>
 2f0:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <HD44780_displayparams>
 2f4:	88 e0       	ldi	r24, 0x08	; 8
 2f6:	0e 94 3a 01 	call	0x274	; 0x274 <HD44780_command>
 2fa:	08 95       	ret

000002fc <HD44780_on>:
 2fc:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <HD44780_displayparams>
 300:	98 2f       	mov	r25, r24
 302:	94 60       	ori	r25, 0x04	; 4
 304:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <HD44780_displayparams>
 308:	8c 60       	ori	r24, 0x0C	; 12
 30a:	0e 94 3a 01 	call	0x274	; 0x274 <HD44780_command>
 30e:	08 95       	ret

00000310 <HD44780_clear>:
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	0e 94 3a 01 	call	0x274	; 0x274 <HD44780_command>
 316:	83 ed       	ldi	r24, 0xD3	; 211
 318:	90 e3       	ldi	r25, 0x30	; 48
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <HD44780_clear+0xa>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <HD44780_clear+0x10>
 320:	00 00       	nop
 322:	08 95       	ret

00000324 <HD44780_puts>:
}

void HD44780_puts(char *string) {
 324:	cf 93       	push	r28
 326:	df 93       	push	r29
 328:	ec 01       	movw	r28, r24
  for (char *it = string; *it; it++) {
 32a:	88 81       	ld	r24, Y
 32c:	88 23       	and	r24, r24
 32e:	31 f0       	breq	.+12     	; 0x33c <HD44780_puts+0x18>
 330:	21 96       	adiw	r28, 0x01	; 1
	//_delay_ms(2);   // seems to be not necessary, but in case something is wrong add it
    HD44780_write(*it);
 332:	0e 94 3e 01 	call	0x27c	; 0x27c <HD44780_write>
  _delay_ms(5);  //todo: test is it necessary
  HD44780_command(HD44780_SETDDRAMADDR | (col + offsets[row]));
}

void HD44780_puts(char *string) {
  for (char *it = string; *it; it++) {
 336:	89 91       	ld	r24, Y+
 338:	81 11       	cpse	r24, r1
 33a:	fb cf       	rjmp	.-10     	; 0x332 <HD44780_puts+0xe>
	//_delay_ms(2);   // seems to be not necessary, but in case something is wrong add it
    HD44780_write(*it);
  }
}
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	08 95       	ret

00000342 <main>:
    //_delay_ms(100);		// Wait for stable power 
    //init_time_keeping();
    //init_event_counting();
    //sei();

	HD44780_init();
 342:	0e 94 42 01 	call	0x284	; 0x284 <HD44780_init>
	HD44780_on();
 346:	0e 94 7e 01 	call	0x2fc	; 0x2fc <HD44780_on>
	HD44780_clear();
 34a:	0e 94 88 01 	call	0x310	; 0x310 <HD44780_clear>
	//HD44780_puts(buff_txt);
	//HD44780_puts(msg);
	
	init_time_keeping();
 34e:	0e 94 53 00 	call	0xa6	; 0xa6 <init_time_keeping>
	init_event_counting();
 352:	0e 94 82 00 	call	0x104	; 0x104 <init_event_counting>
	sei();
 356:	78 94       	sei
	
	
	for (;;) {
//		_delay_ms(1000);

		LCD_LED_SET;
 358:	5f 9a       	sbi	0x0b, 7	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35a:	2f ef       	ldi	r18, 0xFF	; 255
 35c:	81 ee       	ldi	r24, 0xE1	; 225
 35e:	94 e0       	ldi	r25, 0x04	; 4
 360:	21 50       	subi	r18, 0x01	; 1
 362:	80 40       	sbci	r24, 0x00	; 0
 364:	90 40       	sbci	r25, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <main+0x1e>
 368:	00 c0       	rjmp	.+0      	; 0x36a <main+0x28>
 36a:	00 00       	nop
		_delay_ms(100);
		LCD_LED_RESET;
 36c:	5f 98       	cbi	0x0b, 7	; 11
 36e:	2f ef       	ldi	r18, 0xFF	; 255
 370:	81 ee       	ldi	r24, 0xE1	; 225
 372:	94 e0       	ldi	r25, 0x04	; 4
 374:	21 50       	subi	r18, 0x01	; 1
 376:	80 40       	sbci	r24, 0x00	; 0
 378:	90 40       	sbci	r25, 0x00	; 0
 37a:	e1 f7       	brne	.-8      	; 0x374 <main+0x32>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <main+0x3c>
 37e:	00 00       	nop
		_delay_ms(100);
		
		//getTicksT0(buff_txt);
		getT1Counts(buff_txt);
 380:	8b e0       	ldi	r24, 0x0B	; 11
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <getT1Counts>

		HD44780_clear();
 388:	0e 94 88 01 	call	0x310	; 0x310 <HD44780_clear>
		HD44780_puts(buff_txt);
 38c:	8b e0       	ldi	r24, 0x0B	; 11
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 92 01 	call	0x324	; 0x324 <HD44780_puts>
	}
 394:	e1 cf       	rjmp	.-62     	; 0x358 <main+0x16>

00000396 <__ultoa_ncheck>:
 396:	bb 27       	eor	r27, r27

00000398 <__ultoa_common>:
 398:	fa 01       	movw	r30, r20
 39a:	a6 2f       	mov	r26, r22
 39c:	62 17       	cp	r22, r18
 39e:	71 05       	cpc	r23, r1
 3a0:	81 05       	cpc	r24, r1
 3a2:	91 05       	cpc	r25, r1
 3a4:	33 0b       	sbc	r19, r19
 3a6:	30 fb       	bst	r19, 0
 3a8:	66 f0       	brts	.+24     	; 0x3c2 <__ultoa_common+0x2a>
 3aa:	aa 27       	eor	r26, r26
 3ac:	66 0f       	add	r22, r22
 3ae:	77 1f       	adc	r23, r23
 3b0:	88 1f       	adc	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	aa 1f       	adc	r26, r26
 3b6:	a2 17       	cp	r26, r18
 3b8:	10 f0       	brcs	.+4      	; 0x3be <__ultoa_common+0x26>
 3ba:	a2 1b       	sub	r26, r18
 3bc:	63 95       	inc	r22
 3be:	38 50       	subi	r19, 0x08	; 8
 3c0:	a9 f7       	brne	.-22     	; 0x3ac <__ultoa_common+0x14>
 3c2:	a0 5d       	subi	r26, 0xD0	; 208
 3c4:	aa 33       	cpi	r26, 0x3A	; 58
 3c6:	08 f0       	brcs	.+2      	; 0x3ca <__ultoa_common+0x32>
 3c8:	a9 5d       	subi	r26, 0xD9	; 217
 3ca:	a1 93       	st	Z+, r26
 3cc:	36 f7       	brtc	.-52     	; 0x39a <__ultoa_common+0x2>
 3ce:	b1 11       	cpse	r27, r1
 3d0:	b1 93       	st	Z+, r27
 3d2:	10 82       	st	Z, r1
 3d4:	ca 01       	movw	r24, r20
 3d6:	0c 94 ed 01 	jmp	0x3da	; 0x3da <strrev>

000003da <strrev>:
 3da:	dc 01       	movw	r26, r24
 3dc:	fc 01       	movw	r30, r24
 3de:	67 2f       	mov	r22, r23
 3e0:	71 91       	ld	r23, Z+
 3e2:	77 23       	and	r23, r23
 3e4:	e1 f7       	brne	.-8      	; 0x3de <strrev+0x4>
 3e6:	32 97       	sbiw	r30, 0x02	; 2
 3e8:	04 c0       	rjmp	.+8      	; 0x3f2 <strrev+0x18>
 3ea:	7c 91       	ld	r23, X
 3ec:	6d 93       	st	X+, r22
 3ee:	70 83       	st	Z, r23
 3f0:	62 91       	ld	r22, -Z
 3f2:	ae 17       	cp	r26, r30
 3f4:	bf 07       	cpc	r27, r31
 3f6:	c8 f3       	brcs	.-14     	; 0x3ea <strrev+0x10>
 3f8:	08 95       	ret

000003fa <_exit>:
 3fa:	f8 94       	cli

000003fc <__stop_program>:
 3fc:	ff cf       	rjmp	.-2      	; 0x3fc <__stop_program>
