
toggleProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000302  00000396  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000302  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800110  00800110  000003a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00000418  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f47  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cf5  00000000  00000000  000024bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f2a  00000000  00000000  000031b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000444  00000000  00000000  000040e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000832  00000000  00000000  00004524  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e48  00000000  00000000  00004d56  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00005b9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e0       	ldi	r30, 0x02	; 2
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 31       	cpi	r26, 0x15	; 21
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 28 01 	call	0x250	; 0x250 <main>
  9e:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <getTicksT0>:
///////////////////////////////////////////////////////////////////////////////



void getTicksT0(char *buff)
{
  a6:	ac 01       	movw	r20, r24

//	cli();
//	t = cli_ticks();
//	sei();

	t = t + 1;
  a8:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
  ac:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x1>
  b0:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <__data_end+0x2>
  b4:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <__data_end+0x3>
  b8:	bc 01       	movw	r22, r24
  ba:	cd 01       	movw	r24, r26
  bc:	6f 5f       	subi	r22, 0xFF	; 255
  be:	7f 4f       	sbci	r23, 0xFF	; 255
  c0:	8f 4f       	sbci	r24, 0xFF	; 255
  c2:	9f 4f       	sbci	r25, 0xFF	; 255
  c4:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
  c8:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <__data_end+0x1>
  cc:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end+0x2>
  d0:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x3>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ultoa_ncheck (unsigned long, char *, unsigned char);
	return __ultoa_ncheck (__val, __s, __radix);
  d4:	2a e0       	ldi	r18, 0x0A	; 10
  d6:	0e 94 4d 01 	call	0x29a	; 0x29a <__ultoa_ncheck>
  da:	08 95       	ret

000000dc <HD44780_write_nibble>:
  if (row > 1) {
    row = 1;
  }

  _delay_ms(5);  //todo: test is it necessary
  HD44780_command(HD44780_SETDDRAMADDR | (col + offsets[row]));
  dc:	e1 ee       	ldi	r30, 0xE1	; 225
  de:	f4 e0       	ldi	r31, 0x04	; 4
  e0:	31 97       	sbiw	r30, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <HD44780_write_nibble+0x4>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <HD44780_write_nibble+0xa>
  e6:	00 00       	nop
  e8:	98 b1       	in	r25, 0x08	; 8
  ea:	90 7f       	andi	r25, 0xF0	; 240
  ec:	98 b9       	out	0x08, r25	; 8
  ee:	98 b1       	in	r25, 0x08	; 8
  f0:	8f 70       	andi	r24, 0x0F	; 15
  f2:	89 2b       	or	r24, r25
  f4:	88 b9       	out	0x08, r24	; 8
  f6:	89 ef       	ldi	r24, 0xF9	; 249
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	01 97       	sbiw	r24, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <HD44780_write_nibble+0x1e>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <HD44780_write_nibble+0x24>
 100:	00 00       	nop
 102:	44 98       	cbi	0x08, 4	; 8
 104:	e9 ef       	ldi	r30, 0xF9	; 249
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	31 97       	sbiw	r30, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <HD44780_write_nibble+0x2c>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <HD44780_write_nibble+0x32>
 10e:	00 00       	nop
 110:	44 9a       	sbi	0x08, 4	; 8
 112:	89 ef       	ldi	r24, 0xF9	; 249
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <HD44780_write_nibble+0x3a>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <HD44780_write_nibble+0x40>
 11c:	00 00       	nop
 11e:	44 98       	cbi	0x08, 4	; 8
 120:	e9 ef       	ldi	r30, 0xF9	; 249
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	31 97       	sbiw	r30, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <HD44780_write_nibble+0x48>
 128:	00 c0       	rjmp	.+0      	; 0x12a <HD44780_write_nibble+0x4e>
 12a:	00 00       	nop
 12c:	08 95       	ret

0000012e <HD44780_send>:
 12e:	cf 93       	push	r28
 130:	c8 2f       	mov	r28, r24
 132:	89 ef       	ldi	r24, 0xF9	; 249
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <HD44780_send+0x8>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <HD44780_send+0xe>
 13c:	00 00       	nop
 13e:	66 23       	and	r22, r22
 140:	11 f0       	breq	.+4      	; 0x146 <HD44780_send+0x18>
 142:	45 9a       	sbi	0x08, 5	; 8
 144:	01 c0       	rjmp	.+2      	; 0x148 <HD44780_send+0x1a>
 146:	45 98       	cbi	0x08, 5	; 8
 148:	89 ef       	ldi	r24, 0xF9	; 249
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <HD44780_send+0x1e>
 150:	00 c0       	rjmp	.+0      	; 0x152 <HD44780_send+0x24>
 152:	00 00       	nop
 154:	28 98       	cbi	0x05, 0	; 5
 156:	89 ef       	ldi	r24, 0xF9	; 249
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <HD44780_send+0x2c>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <HD44780_send+0x32>
 160:	00 00       	nop
 162:	8c 2f       	mov	r24, r28
 164:	82 95       	swap	r24
 166:	8f 70       	andi	r24, 0x0F	; 15
 168:	0e 94 6e 00 	call	0xdc	; 0xdc <HD44780_write_nibble>
 16c:	81 ee       	ldi	r24, 0xE1	; 225
 16e:	94 e0       	ldi	r25, 0x04	; 4
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <HD44780_send+0x42>
 174:	00 c0       	rjmp	.+0      	; 0x176 <HD44780_send+0x48>
 176:	00 00       	nop
 178:	8c 2f       	mov	r24, r28
 17a:	0e 94 6e 00 	call	0xdc	; 0xdc <HD44780_write_nibble>
 17e:	cf 91       	pop	r28
 180:	08 95       	ret

00000182 <HD44780_command>:
 182:	60 e0       	ldi	r22, 0x00	; 0
 184:	0e 94 97 00 	call	0x12e	; 0x12e <HD44780_send>
 188:	08 95       	ret

0000018a <HD44780_write>:
 18a:	61 e0       	ldi	r22, 0x01	; 1
 18c:	0e 94 97 00 	call	0x12e	; 0x12e <HD44780_send>
 190:	08 95       	ret

00000192 <HD44780_init>:
 192:	3d 9a       	sbi	0x07, 5	; 7
 194:	20 9a       	sbi	0x04, 0	; 4
 196:	3c 9a       	sbi	0x07, 4	; 7
 198:	87 b1       	in	r24, 0x07	; 7
 19a:	8f 60       	ori	r24, 0x0F	; 15
 19c:	87 b9       	out	0x07, r24	; 7
 19e:	85 ea       	ldi	r24, 0xA5	; 165
 1a0:	9e e0       	ldi	r25, 0x0E	; 14
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <HD44780_init+0x10>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <HD44780_init+0x16>
 1a8:	00 00       	nop
 1aa:	44 98       	cbi	0x08, 4	; 8
 1ac:	45 98       	cbi	0x08, 5	; 8
 1ae:	28 98       	cbi	0x05, 0	; 5
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	94 e0       	ldi	r25, 0x04	; 4
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <HD44780_init+0x22>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <HD44780_init+0x28>
 1ba:	00 00       	nop
 1bc:	83 e0       	ldi	r24, 0x03	; 3
 1be:	0e 94 6e 00 	call	0xdc	; 0xdc <HD44780_write_nibble>
 1c2:	81 ee       	ldi	r24, 0xE1	; 225
 1c4:	94 e0       	ldi	r25, 0x04	; 4
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <HD44780_init+0x34>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <HD44780_init+0x3a>
 1cc:	00 00       	nop
 1ce:	83 e0       	ldi	r24, 0x03	; 3
 1d0:	0e 94 6e 00 	call	0xdc	; 0xdc <HD44780_write_nibble>
 1d4:	81 ee       	ldi	r24, 0xE1	; 225
 1d6:	94 e0       	ldi	r25, 0x04	; 4
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <HD44780_init+0x46>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <HD44780_init+0x4c>
 1de:	00 00       	nop
 1e0:	83 e0       	ldi	r24, 0x03	; 3
 1e2:	0e 94 6e 00 	call	0xdc	; 0xdc <HD44780_write_nibble>
 1e6:	81 ee       	ldi	r24, 0xE1	; 225
 1e8:	94 e0       	ldi	r25, 0x04	; 4
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <HD44780_init+0x58>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <HD44780_init+0x5e>
 1f0:	00 00       	nop
 1f2:	82 e0       	ldi	r24, 0x02	; 2
 1f4:	0e 94 6e 00 	call	0xdc	; 0xdc <HD44780_write_nibble>
 1f8:	88 e2       	ldi	r24, 0x28	; 40
 1fa:	0e 94 c1 00 	call	0x182	; 0x182 <HD44780_command>
 1fe:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <HD44780_displayparams>
 202:	88 e0       	ldi	r24, 0x08	; 8
 204:	0e 94 c1 00 	call	0x182	; 0x182 <HD44780_command>
 208:	08 95       	ret

0000020a <HD44780_on>:
 20a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <HD44780_displayparams>
 20e:	98 2f       	mov	r25, r24
 210:	94 60       	ori	r25, 0x04	; 4
 212:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <HD44780_displayparams>
 216:	8c 60       	ori	r24, 0x0C	; 12
 218:	0e 94 c1 00 	call	0x182	; 0x182 <HD44780_command>
 21c:	08 95       	ret

0000021e <HD44780_clear>:
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	0e 94 c1 00 	call	0x182	; 0x182 <HD44780_command>
 224:	83 ed       	ldi	r24, 0xD3	; 211
 226:	90 e3       	ldi	r25, 0x30	; 48
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <HD44780_clear+0xa>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <HD44780_clear+0x10>
 22e:	00 00       	nop
 230:	08 95       	ret

00000232 <HD44780_puts>:
}

void HD44780_puts(char *string) {
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	ec 01       	movw	r28, r24
  for (char *it = string; *it; it++) {
 238:	88 81       	ld	r24, Y
 23a:	88 23       	and	r24, r24
 23c:	31 f0       	breq	.+12     	; 0x24a <HD44780_puts+0x18>
 23e:	21 96       	adiw	r28, 0x01	; 1
	//_delay_ms(2);   // seems to be not necessary, but in case something is wrong add it
    HD44780_write(*it);
 240:	0e 94 c5 00 	call	0x18a	; 0x18a <HD44780_write>
  _delay_ms(5);  //todo: test is it necessary
  HD44780_command(HD44780_SETDDRAMADDR | (col + offsets[row]));
}

void HD44780_puts(char *string) {
  for (char *it = string; *it; it++) {
 244:	89 91       	ld	r24, Y+
 246:	81 11       	cpse	r24, r1
 248:	fb cf       	rjmp	.-10     	; 0x240 <HD44780_puts+0xe>
	//_delay_ms(2);   // seems to be not necessary, but in case something is wrong add it
    HD44780_write(*it);
  }
}
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <main>:
    //_delay_ms(100);		// Wait for stable power 
    //init_time_keeping();
    //init_event_counting();
    //sei();

	HD44780_init();
 250:	0e 94 c9 00 	call	0x192	; 0x192 <HD44780_init>
	HD44780_on();
 254:	0e 94 05 01 	call	0x20a	; 0x20a <HD44780_on>
	HD44780_clear();
 258:	0e 94 0f 01 	call	0x21e	; 0x21e <HD44780_clear>
	//HD44780_puts(msg);
	
	for (;;) {
//		_delay_ms(1000);

		LCD_LED_SET;
 25c:	5f 9a       	sbi	0x0b, 7	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25e:	2f ef       	ldi	r18, 0xFF	; 255
 260:	89 e6       	ldi	r24, 0x69	; 105
 262:	98 e1       	ldi	r25, 0x18	; 24
 264:	21 50       	subi	r18, 0x01	; 1
 266:	80 40       	sbci	r24, 0x00	; 0
 268:	90 40       	sbci	r25, 0x00	; 0
 26a:	e1 f7       	brne	.-8      	; 0x264 <main+0x14>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <main+0x1e>
 26e:	00 00       	nop
		_delay_ms(500);
		LCD_LED_RESET;
 270:	5f 98       	cbi	0x0b, 7	; 11
 272:	2f ef       	ldi	r18, 0xFF	; 255
 274:	89 e6       	ldi	r24, 0x69	; 105
 276:	98 e1       	ldi	r25, 0x18	; 24
 278:	21 50       	subi	r18, 0x01	; 1
 27a:	80 40       	sbci	r24, 0x00	; 0
 27c:	90 40       	sbci	r25, 0x00	; 0
 27e:	e1 f7       	brne	.-8      	; 0x278 <main+0x28>
 280:	00 c0       	rjmp	.+0      	; 0x282 <main+0x32>
 282:	00 00       	nop
		_delay_ms(500);

		
		getTicksT0(buff_txt);
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	0e 94 53 00 	call	0xa6	; 0xa6 <getTicksT0>

//		HD44780_puts(buff_empty_txt);
//		_delay_ms(20);
		HD44780_clear();
 28c:	0e 94 0f 01 	call	0x21e	; 0x21e <HD44780_clear>
		HD44780_puts(buff_txt);
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	91 e0       	ldi	r25, 0x01	; 1
 294:	0e 94 19 01 	call	0x232	; 0x232 <HD44780_puts>
	}
 298:	e1 cf       	rjmp	.-62     	; 0x25c <main+0xc>

0000029a <__ultoa_ncheck>:
 29a:	bb 27       	eor	r27, r27

0000029c <__ultoa_common>:
 29c:	fa 01       	movw	r30, r20
 29e:	a6 2f       	mov	r26, r22
 2a0:	62 17       	cp	r22, r18
 2a2:	71 05       	cpc	r23, r1
 2a4:	81 05       	cpc	r24, r1
 2a6:	91 05       	cpc	r25, r1
 2a8:	33 0b       	sbc	r19, r19
 2aa:	30 fb       	bst	r19, 0
 2ac:	66 f0       	brts	.+24     	; 0x2c6 <__ultoa_common+0x2a>
 2ae:	aa 27       	eor	r26, r26
 2b0:	66 0f       	add	r22, r22
 2b2:	77 1f       	adc	r23, r23
 2b4:	88 1f       	adc	r24, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	aa 1f       	adc	r26, r26
 2ba:	a2 17       	cp	r26, r18
 2bc:	10 f0       	brcs	.+4      	; 0x2c2 <__ultoa_common+0x26>
 2be:	a2 1b       	sub	r26, r18
 2c0:	63 95       	inc	r22
 2c2:	38 50       	subi	r19, 0x08	; 8
 2c4:	a9 f7       	brne	.-22     	; 0x2b0 <__ultoa_common+0x14>
 2c6:	a0 5d       	subi	r26, 0xD0	; 208
 2c8:	aa 33       	cpi	r26, 0x3A	; 58
 2ca:	08 f0       	brcs	.+2      	; 0x2ce <__ultoa_common+0x32>
 2cc:	a9 5d       	subi	r26, 0xD9	; 217
 2ce:	a1 93       	st	Z+, r26
 2d0:	36 f7       	brtc	.-52     	; 0x29e <__ultoa_common+0x2>
 2d2:	b1 11       	cpse	r27, r1
 2d4:	b1 93       	st	Z+, r27
 2d6:	10 82       	st	Z, r1
 2d8:	ca 01       	movw	r24, r20
 2da:	0c 94 6f 01 	jmp	0x2de	; 0x2de <strrev>

000002de <strrev>:
 2de:	dc 01       	movw	r26, r24
 2e0:	fc 01       	movw	r30, r24
 2e2:	67 2f       	mov	r22, r23
 2e4:	71 91       	ld	r23, Z+
 2e6:	77 23       	and	r23, r23
 2e8:	e1 f7       	brne	.-8      	; 0x2e2 <strrev+0x4>
 2ea:	32 97       	sbiw	r30, 0x02	; 2
 2ec:	04 c0       	rjmp	.+8      	; 0x2f6 <strrev+0x18>
 2ee:	7c 91       	ld	r23, X
 2f0:	6d 93       	st	X+, r22
 2f2:	70 83       	st	Z, r23
 2f4:	62 91       	ld	r22, -Z
 2f6:	ae 17       	cp	r26, r30
 2f8:	bf 07       	cpc	r27, r31
 2fa:	c8 f3       	brcs	.-14     	; 0x2ee <strrev+0x10>
 2fc:	08 95       	ret

000002fe <_exit>:
 2fe:	f8 94       	cli

00000300 <__stop_program>:
 300:	ff cf       	rjmp	.-2      	; 0x300 <__stop_program>
